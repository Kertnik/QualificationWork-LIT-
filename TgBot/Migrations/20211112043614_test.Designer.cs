// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TgBot.Models;

#nullable disable

namespace TgBot.Migrations
{
    [DbContext(typeof(DriverContext))]
    [Migration("20211112043614_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TgBot.Models.CurRoute", b =>
                {
                    b.Property<long>("RecordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RecordID"), 1L, 1);

                    b.Property<DateTime>("Day")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 11, 12, 0, 0, 0, 0, DateTimeKind.Local));

                    b.Property<string>("DriverId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RouteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecordID");

                    b.HasIndex("DriverId");

                    b.ToTable("MyCurRoutes");
                });

            modelBuilder.Entity("TgBot.Models.Driver", b =>
                {
                    b.Property<string>("DriverId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("OrdinalRouteRouteId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DriverId");

                    b.HasIndex("OrdinalRouteRouteId");

                    b.ToTable("MyDrivers");
                });

            modelBuilder.Entity("TgBot.Models.Route", b =>
                {
                    b.Property<string>("RouteId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte>("NumberOfStops")
                        .HasColumnType("tinyint");

                    b.Property<string>("Stops")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RouteId");

                    b.ToTable("MyRoutes");
                });

            modelBuilder.Entity("TgBot.Models.CurRoute", b =>
                {
                    b.HasOne("TgBot.Models.Driver", null)
                        .WithMany("MyRoutes")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TgBot.Models.Driver", b =>
                {
                    b.HasOne("TgBot.Models.Route", "OrdinalRoute")
                        .WithMany()
                        .HasForeignKey("OrdinalRouteRouteId");

                    b.Navigation("OrdinalRoute");
                });

            modelBuilder.Entity("TgBot.Models.Driver", b =>
                {
                    b.Navigation("MyRoutes");
                });
#pragma warning restore 612, 618
        }
    }
}
